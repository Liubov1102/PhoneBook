{"version":3,"file":"static/js/705.ce9b73bb.chunk.js","mappings":"+PAGaA,EAAQC,EAAAA,GAAAA,GAAH,8FAMLC,EAAQD,EAAAA,GAAAA,MAAH,4LASLE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,0OAaLI,EAASJ,EAAAA,GAAAA,OAAH,0XAkBNK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2D,mBCxChBO,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,IAAI,IAAIC,SAAS,sBACpCC,MAAOJ,EAAAA,KAAaG,SAAS,uBAAuBC,QACpDC,SAAUL,EAAAA,KAAaG,SAAS,0BAA0BG,IAAI,GAAGJ,IAAI,MAG1DK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,iCACE,SAACpB,EAAD,4BACA,SAAC,KAAD,CACEqB,cAAe,CAAEX,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDN,iBAAkBA,EAClBc,SAZe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAE9BP,EAASQ,EAAAA,GAAAA,SAAwBF,IACjCJ,EAAS,aACTK,GACD,EAQKE,aAAa,MAJf,UAOE,UAAC,KAAD,YACE,UAACxB,EAAD,CAAOyB,QAAQ,OAAf,kBACE,SAACxB,EAAD,CACEyB,GAAG,OACHC,KAAK,OACLnB,KAAK,OACLgB,aAAa,YAGjB,SAACpB,EAAD,CAAWI,KAAK,OAAOoB,UAAU,SAEjC,UAAC5B,EAAD,CAAOyB,QAAQ,QAAf,mBACE,SAACxB,EAAD,CACEyB,GAAG,QACHC,KAAK,QACLnB,KAAK,QACLgB,aAAa,YAGjB,SAACpB,EAAD,CAAWI,KAAK,QAAQoB,UAAU,SAElC,UAAC5B,EAAD,CAAOyB,QAAQ,WAAf,sBACE,SAACxB,EAAD,CACEyB,GAAG,WACHC,KAAK,WACLnB,KAAK,WACLgB,aAAa,YAGjB,SAACpB,EAAD,CAAWI,KAAK,WAAWoB,UAAU,SAErC,SAACzB,EAAD,CAAQwB,KAAK,SAAb,iCAQT,ECvEYE,EAAM9B,EAAAA,GAAAA,IAAH,gDCCD,SAAS+B,IAEtB,OACE,SAACD,EAAD,WACC,SAACf,EAAD,KAGJ,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.js","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field , ErrorMessage} from 'formik';\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #2a2a2a;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-transform: uppercase;\n  font-weight: 500;\n  color: #2a2a2a;\n  margin-top: 20px;\n`;\nexport const Input = styled(Field)`\n  border: 1px solid #2a2a2a;;\n  font: inherit;\n  font-size: 16px;\n  padding: 8px;\n  border-radius: 4px;\n  width: 360px;\n  outline: 0;\n  margin-top: 4px;\n  :focus {\n    border: 2px solid #b55b2d;\n  }\n`;\nexport const Button = styled.button`\n  text-transform: uppercase;\n  cursor: pointer;\n  padding: 10px;\n  margin-top: 20px;\n  display: block;\n  color: #fff;\n  background: #b55b2d;\n  border: none;\n  border-radius: 4px;\n  transition-property: box-shadow;\n  font-weight: 700;\n  font-size: 16px;\n  box-shadow: 4px 4px 10px 0 rgb(37 38 50 / 70%);\n :hover {\n    box-shadow: none;\n }\n`;\nexport const ErrorText = styled(ErrorMessage)`\n    margin: 0px;\n    color: red;\n`;\n\n","\n\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { authOperations } from 'redux/auth';\nimport { Title, Label, Input, Button, ErrorText } from './RegisterForm.styled';\nimport { Formik, Form  } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().max(16).required('Please, enter name'),\n  email: Yup.string().required('Please, enter email').email(),\n  password: Yup.string().required('Please, enter password').min(7).max(14),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (values, { resetForm }) => {\n    //const { name, email, password } = values;\n    dispatch(authOperations.register(values));\n    navigate('/contacts');\n    resetForm();\n  };\n  return (\n    <>\n      <Title>Registration</Title>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n              \n        <Form>\n          <Label htmlFor='name'>Name\n            <Input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"off\"\n            />\n          </Label>\n          <ErrorText name=\"name\" component=\"div\" />\n              \n          <Label htmlFor='email'>email\n            <Input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n            />\n          </Label>\n          <ErrorText name=\"email\" component=\"div\" />\n           \n          <Label htmlFor='password'>password\n            <Input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"off\"\n            />\n          </Label>\n          <ErrorText name=\"password\" component=\"div\" />\n      \n          <Button type=\"submit\" >\n            Registration\n          </Button>\n        </Form>\n            \n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const Box = styled.div`\n  padding: 50px 170px;\n`;\n","\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from './Register.styled';\n\nexport default function Register()  {\n  \n  return (\n    <Box>\n     <RegisterForm/>\n    </Box>\n  );\n};\n\n\n"],"names":["Title","styled","Label","Input","Field","Button","ErrorText","ErrorMessage","validationSchema","Yup","name","max","required","email","password","min","RegisterForm","dispatch","useDispatch","navigate","useNavigate","initialValues","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","id","type","component","Box","Register"],"sourceRoot":""}